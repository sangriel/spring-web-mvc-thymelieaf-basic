//텍스트 - text , utext
model로 <b>어쩌고 저쩌고</b>를 그냥 넘겨버리면 강조 표시가 되지 않고 그냥 그대로 나온
HTML의 경우 HTML 엔티티라고 해서, <를 태그의 시작으로 인식 따라서 <를 태그가 아닌 문자로 인식할 수 있는 방법이 필요,
이것을 HTML 엔티티라고 함, 그리고 이렇게 특수문자를 HTML 엔티티로 변경하는 것을 이스케이프라고 한다.
그래서 unescape를 하려면 th:utext를 쓰면 된다


//변수 - springEL
지역변수는 해당 태그 안쪽에서만 사용 가능

//타임리프 기본 객체들
spring3.0 기준으로 다음과 같은 방법은 지원이 안됨
<li>request = <span th:text="${#request}"></span></li>
    <li>response = <span th:text="${#response}"></span></li>
    <li>session = <span th:text="${#session}"></span></li>
    <li>servletContext = <span th:text="${#servletContext}"></span></li>
 따라서 그냥 모델에다가 넣어서 넘겨줘야 함

 //유틸리티 객체와 날짜

//리터럴
원래는 항상 '' 처리를 해야 하지만
공백없이 쭉 이어지는 문자열은 ''처리를 하지 않아도 리터럴로 인식된다. A-z,0-9,.,-,_

//연산
elvis 그냥 swift ?? 이랑 같은거라 생각하면 됨
no operation 경우
 <li>${nullData}?: _ = <span th:text="${nullData}?: _">데이터가 없습니다.</span></li>
 그냥 타임리프 태그 효과 자체가 무효화 된다고 보면 편함

 //속성값 설정
<h1>속성 추가</h1>
- th:attrappend = <input type="text" class="text" th:attrappend="class=' large'" /><br/> ---> class="text large"
- th:attrprepend = <input type="text" class="text" th:attrprepend="class='large '" /><br/> ---> class="large text"
- th:classappend = <input type="text" class="text" th:classappend="large" /><br/> ---> class="text large"

- checked x <input type="checkbox" name="active" th:checked="false" /><br/>
---> 보통 checked라는 속성이 있으면 html은 무조건 check 처리 해버림 하지만 th:checked="false"를 하면
타임리프에서 checked라는 속성 자체를 빼버림 따라서 false처리가 됨

//반복 each
반복 상태 유지
<tr th:each="user, userStat : ${users}">
    <td th:text="${userStat.count}">username</td>
    <td th:text="${user.username}">username</td>
    <td th:text="${user.age}">0</td>
 </tr>
 일때 두번째 파라미터 userStat을 생략해도 아래에서 userStat사용가능
 룰은 지정한 변수명 "user" + "Stat"으로 자동적으로 생성됨


 //조건부 평가
 조건을 충족하지 못하면 해당 태그 자체가 그냥 날라가 버림

